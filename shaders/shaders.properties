#Force Video Settings
dynamicHandLight=true
oldHandLight=false
oldLighting=false
underwaterOverlay=false
vignette=false
separateAo=true
shadow.culling=true

#ifdef ENTITY_SHADOWS
shadowEntities=true
shadowBlockEntities=true
shadowPlayer=true
#else
shadowEntities=false
shadowBlockEntities=false
shadowPlayer=true
#endif

#screen Setup

#Set Sliders

#Program Toggle

#Alpha Tests
alphaTest.gbuffers_weather=GREATER 0.001
alphaTest.gbuffers_textured=GREATER 0.001
alphaTest.gbuffers_skytextured=GREATER 0.001
alphaTest.gbuffers_skybasic=GREATER 0.001
alphaTest.gbuffers_water=GREATER 0.001
alphaTest.gbuffers_beaconbeam=GREATER 0.001

#Enable Beacon Beam Depth
beacon.beam.depth=true

#Custom Texture
texture.noise=tex/noise.png

#ifdef MILKY_WAY
texture.deferred.depthtex2=tex/milkyWay.png
texture.gbuffers.depthtex2=tex/milkyWay.png
#endif

#Custom Time Uniform
variable.float.tAmin=frac(sunAngle - 0.033333333)
variable.float.tAlin=if(tAmin < 0.433333333, tAmin * 1.15384615385, tAmin * 0.882352941176 + 0.117647058824)
variable.float.hA=if(tAlin > 0.5, 1.0, 0.0)
variable.float.tAfrc=frac(tAlin * 2.0)
variable.float.tAfrs=tAfrc * tAfrc * (3.0 - 2.0 * tAfrc)
variable.float.tAmix=if(hA < 0.5, 0.3, -0.1)

uniform.float.timeAngle=(tAfrc * (1.0 - tAmix) + tAfrs * tAmix + hA) * 0.5
uniform.float.timeBrightness=max(sin(timeAngle * 6.28318530718), 0.0)
uniform.float.shadowFade=clamp(1.0 - (abs(abs(sunAngle - 0.5) - 0.25) - 0.23) * 100.0, 0.0, 1.0)

#Custom Blindness Uniform
variable.float.blindFactorSqrt=clamp(blindness * 2.0 - 1.0, 0.0, 1.0)
uniform.float.blindFactor=blindFactorSqrt * blindFactorSqrt

#Biome uniforms
variable.float.yCold1=if(cameraPosition.y >= 93.0, 1, 0)
variable.float.yCold2=if(cameraPosition.y >= 123.0, 1, 0)
variable.float.yCold3=if(cameraPosition.y >= 153.0, 1, 0)

uniform.float.isSnowy=smooth(1, if(in(biome, BIOME_GROVE, BIOME_SNOWY_SLOPES, BIOME_FROZEN_OCEAN, BIOME_FROZEN_PEAKS, BIOME_FROZEN_RIVER, BIOME_SNOWY_PLAINS, BIOME_SNOWY_BEACH, BIOME_SNOWY_TAIGA, BIOME_ICE_SPIKES), 1, 0), 10, 10) + \
                     smooth(11, if(in(biome, BIOME_WINDSWEPT_HILLS, BIOME_STONY_SHORE, BIOME_WINDSWEPT_FOREST, BIOME_WINDSWEPT_GRAVELLY_HILLS), 1, 0) * yCold1, 10, 10) + \
                     smooth(12, if(in(biome, BIOME_TAIGA, BIOME_OLD_GROWTH_PINE_TAIGA), 1, 0) * yCold2, 10, 10) + \
                     smooth(13, if(in(biome, BIOME_OLD_GROWTH_SPRUCE_TAIGA), 1, 0) * yCold3, 10, 10)

#TAA Jitter
uniform.int.framemod8 = frameCounter % 8

#Custom images for voxelization
iris.features.required = CUSTOM_IMAGES

#if VOXEL_VOLUME_SIZE == 64
image.voxel_img=voxelSampler red_integer r8ui unsigned_int true false 64 64 64
image.floodfill_img=floodfillSampler rgba rgba16f half_float false false 64 64 64
image.floodfill_img_copy=floodfillSamplerCopy rgba rgba16f half_float false false 64 64 64
#elif VOXEL_VOLUME_SIZE == 128
image.voxel_img=voxelSampler red_integer r8ui unsigned_int true false 128 128 128
image.floodfill_img=floodfillSampler rgba rgba16f half_float false false 128 128 128
image.floodfill_img_copy=floodfillSamplerCopy rgba rgba16f half_float false false 128 128 128
#elif VOXEL_VOLUME_SIZE == 256
image.voxel_img=voxelSampler red_integer r8ui unsigned_int true false 256 256 256
image.floodfill_img=floodfillSampler rgba rgba16f half_float false false 256 256 256
image.floodfill_img_copy=floodfillSamplerCopy rgba rgba16f half_float false false 256 256 256
#elif VOXEL_VOLUME_SIZE == 512
image.voxel_img=voxelSampler red_integer r8ui unsigned_int true false 512 512 512
image.floodfill_img=floodfillSampler rgba rgba16f half_float false false 512 512 512
image.floodfill_img_copy=floodfillSamplerCopy rgba rgba16f half_float false false 512 512 512
#endif